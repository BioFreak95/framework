ALTER TABLE `documents`
    DROP COLUMN `server_date_unlocking`,
    ADD COLUMN `server_date_deleted` VARCHAR(50) NULL COMMENT 'Date of deletion, if server_state = delete (is generated by the system).' AFTER `server_date_published`,
    MODIFY COLUMN `server_state` ENUM('published', 'restricted', 'inprogress', 'unpublished', 'deleted', 'temporary') NOT NULL COMMENT 'Status of publication process in the repository.';

ALTER TABLE `document_identifiers`
    MODIFY COLUMN `type` ENUM('doi', 'handle', 'urn', 'std-doi', 'url', 'cris-link', 'splash-url', 'isbn', 'issn', 'opus3-id', 'opac-id', 'uuid', 'serial', 'old', 'pmid', 'arxiv') NOT NULL COMMENT 'Type of the identifier.' ,
    ADD INDEX `fk_document_identifiers_documents_type` (`document_id` ASC, `type` ASC);

ALTER TABLE `document_files`
    ADD COLUMN `comment` TEXT NULL COMMENT 'Comment for a file.',
    ADD COLUMN `embargo_date` VARCHAR(50) NULL COMMENT 'Embargo date of file, after which it will be publicly available.';

ALTER TABLE `document_references`
    MODIFY COLUMN `type` ENUM('doi', 'handle', 'urn', 'std-doi', 'url', 'cris-link', 'splash-url', 'isbn', 'issn', 'opus4-id') NOT NULL COMMENT 'Type of the identifier.' ,
    ADD COLUMN `relation` ENUM('referenced-by', 'updated-by') COMMENT 'Describes the type of the relation.';

ALTER TABLE `dnb_institutes`
    MODIFY COLUMN `is_grantor` TINYINT (1) NOT NULL DEFAULT 0 COMMENT 'Flag: is the institution grantor of academic degrees?' ,
    ADD COLUMN `is_publisher` TINYINT (1) NOT NULL DEFAULT 0 COMMENT 'Flag: is the institution of academic theses?';

DROP TABLE `person_external_keys`;

DROP TABLE `privileges`;

-- -----------------------------------------------------
-- Table `access_documents`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `access_documents` (
    `role_id` INT UNSIGNED NOT NULL COMMENT "Primary key and foreign key to: roles.id" ,
    `document_id` INT UNSIGNED NOT NULL COMMENT "Primary key and foreign key to: documents.id" ,
  PRIMARY KEY (`role_id`, `document_id`) ,
  INDEX `fk_access_documents_role` (`role_id` ASC) ,
  CONSTRAINT `fk_access_documents_role`
    FOREIGN KEY (`role_id` )
    REFERENCES `roles` (`id` )
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  INDEX `fk_access_documents_document` (`document_id` ASC) ,
  CONSTRAINT `fk_access_documents_document`
    FOREIGN KEY (`document_id` )
    REFERENCES `documents` (`id` )
    ON DELETE CASCADE
    ON UPDATE CASCADE
) ENGINE = InnoDB
COMMENT =  'Contains access rights for (given groups) to (documents).';

-- -----------------------------------------------------
-- Table `access_files`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `access_files` (
    `role_id` INT UNSIGNED NOT NULL COMMENT "Primary key and foreign key to: roles.id" ,
    `file_id` INT UNSIGNED NOT NULL COMMENT "Primary key and foreign key to: document_files.id" ,
  PRIMARY KEY (`role_id`, `file_id`) ,
  INDEX `fk_access_files_role` (`role_id` ASC) ,
  CONSTRAINT `fk_access_files_role`
    FOREIGN KEY (`role_id` )
    REFERENCES `roles` (`id` )
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  INDEX `fk_access_files_file` (`file_id` ASC) ,
  CONSTRAINT `fk_access_files_file`
    FOREIGN KEY (`file_id` )
    REFERENCES `document_files` (`id` )
    ON DELETE CASCADE
    ON UPDATE CASCADE
) ENGINE = InnoDB
COMMENT =  'Contains access rights for (given groups) to (files).';

-- -----------------------------------------------------
-- Table `access_modules`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `access_modules` (
    `role_id` INT UNSIGNED NOT NULL COMMENT "Primary key and foreign key to: roles.id" ,
    `module_name` VARCHAR(255) NOT NULL COMMENT "Primary key and name of application module" ,
    `controller_name` VARCHAR(255) NOT NULL COMMENT "Primary key and name of module controller" ,
  PRIMARY KEY (`role_id`, `module_name`, `controller_name`) ,
  INDEX `fk_access_modules_role` (`role_id` ASC) ,
  CONSTRAINT `fk_access_modules_role`
    FOREIGN KEY (`role_id` )
    REFERENCES `roles` (`id` )
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  INDEX `fk_access_modules_module` (`module_name` ASC)
) ENGINE = InnoDB
COMMENT =  'Contains access rights for (given groups) to (modules/controllers).';






